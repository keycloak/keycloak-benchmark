name: Multi-AZ Clusters - Deploy

on:
  workflow_dispatch:
    inputs:
      clusterPrefix:
        description: 'The prefix to be used when creating the clusters'
        type: string
      region:
        description: 'The AWS region to create both clusters in. Defaults to "vars.AWS_DEFAULT_REGION" if omitted.'
        type: string
      keycloakRepository:
        description: 'The repository to deploy Keycloak from. If not set nightly image is used'
        type: string
      activeActive:
        description: 'When true deploy an Active/Active Keycloak deployment'
        type: boolean
        default: false
      enableExternalInfinispanFeature:
        description: 'To enable the external Infinispan feature. It disables the embedded caches and only uses the remote caches.'
        type: boolean
        default: false
      enableMultiSiteFeature:
        description: 'To enable the Multi Site Feature'
        type: boolean
        default: true
      keycloakBranch:
        description: 'The branch to deploy Keycloak from. If not set nightly image is used'
        type: string
  workflow_call:
    inputs:
      clusterPrefix:
        description: 'The prefix to be used when creating the clusters'
        type: string
      region:
        description: 'The AWS region to create both clusters in. Defaults to "vars.AWS_DEFAULT_REGION" if omitted.'
        type: string
      keycloak_operator_olm:
        type: boolean
        default: false
      keycloak_operator_olm_catalog_source:
        type: string
        default: community-operators
      keycloak_operator_olm_name:
        type: string
        default: keycloak-operator
      keycloak_operator_olm_channel:
        type: string
      keycloak_operator_olm_version:
        type: string
      infinispan_use_custom_image:
        type: boolean
        default: true
      keycloakRepository:
        description: 'The repository to deploy Keycloak from. If not set nightly image is used'
        type: string
      activeActive:
        description: 'When true deploy an Active/Active Keycloak deployment'
        type: boolean
        default: false
      enableExternalInfinispanFeature:
        description: 'To enable the external Infinispan feature. It disables the embedded caches and only uses the remote caches.'
        type: boolean
        default: false
      enableMultiSiteFeature:
        description: 'To enable the Multi Site Feature'
        type: boolean
        default: true
      keycloakBranch:
        description: 'The branch to deploy Keycloak from. If not set nightly image is used'
        type: string

env:
  CLUSTER_PREFIX: ${{ inputs.clusterPrefix || format('gh-{0}', github.repository_owner) }}
  REGION: ${{ inputs.region || vars.AWS_DEFAULT_REGION }}
  KC_EXTERNAL_INFINISPAN: ${{ inputs.enableExternalInfinispanFeature }}
  KC_MULTI_SITE: ${{ inputs.enableMultiSiteFeature }}

jobs:

  deploy-keycloak:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: false

      - name: Setup ROSA CLI
        uses: ./.github/actions/rosa-cli-setup
        with:
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ vars.AWS_DEFAULT_REGION }}
          rosa-token: ${{ secrets.ROSA_TOKEN }}

      - name: Setup Go Task
        uses: ./.github/actions/task-setup

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Monitoring
        working-directory: provision/rosa-cross-dc
        run: task monitoring
        env:
          ROSA_CLUSTER_NAME_1: ${{ env.CLUSTER_PREFIX }}-a
          ROSA_CLUSTER_NAME_2: ${{ env.CLUSTER_PREFIX }}-b

      - name: Create Route53 Loadbalancer
        if: ${{ !inputs.activeActive }}
        working-directory: provision/rosa-cross-dc
        run: |
          task route53 > route53
          echo "KC_CLIENT_URL=$(grep -Po 'Client Site URL: \K.*' route53)" >> $GITHUB_ENV
          echo "KC_HEALTH_URL_CLUSTER_1=$(grep -Po 'Primary Site URL: \K.*' route53)" >> $GITHUB_ENV
          echo "KC_HEALTH_URL_CLUSTER_2=$(grep -Po 'Backup Site URL: \K.*' route53)" >> $GITHUB_ENV
        env:
          ROSA_CLUSTER_NAME_1: ${{ env.CLUSTER_PREFIX }}-a
          ROSA_CLUSTER_NAME_2: ${{ env.CLUSTER_PREFIX }}-b

      - name: Deploy Active/Passive
        if: ${{ !inputs.activeActive }}
        working-directory: provision/rosa-cross-dc
        run: task
        env:
          AURORA_CLUSTER: ${{ env.CLUSTER_PREFIX }}
          AURORA_REGION: ${{ env.REGION }}
          ROSA_CLUSTER_NAME_1: ${{ env.CLUSTER_PREFIX }}-a
          ROSA_CLUSTER_NAME_2: ${{ env.CLUSTER_PREFIX }}-b
          KC_OPERATOR_OLM: ${{ inputs.keycloak_operator_olm }}
          KC_OPERATOR_CATALOG_SOURCE: ${{ inputs.keycloak_operator_olm_catalog_source }}
          KC_OPERATOR_NAME: ${{ inputs.keycloak_operator_olm_name }}
          KC_OPERATOR_CHANNEL: ${{ inputs.keycloak_operator_olm_channel }}
          KC_OPERATOR_VERSION: ${{ inputs.keycloak_operator_olm_version }}
          KC_CPU_REQUESTS: 6
          KC_CPU_LIMITS: 6
          KC_INSTANCES: 3
          KC_DISABLE_STICKY_SESSION: true
          KC_CRYOSTAT: true
          KC_IS_ACTIVE_PASSIVE: true
          KC_EXTERNAL_INFINISPAN: ${{ env.KC_EXTERNAL_INFINISPAN }}
          KC_MEMORY_REQUESTS_MB: 3000
          KC_MEMORY_LIMITS_MB: 4000
          KC_DB_POOL_INITIAL_SIZE: 30
          KC_DB_POOL_MAX_SIZE: 30
          KC_DB_POOL_MIN_SIZE: 30
          KC_DATABASE: "aurora-postgres"
          MULTI_AZ: "true"
          CROSS_DC_XSITE_FAIL_POLICY: "WARN"
          CROSS_DC_TX_MODE: "NONE"
          KC_REPOSITORY: ${{ inputs.keycloakRepository }}
          KC_BRANCH: ${{ inputs.keycloakBranch }}
          CROSS_DC_IMAGE_USE_CUSTOM: ${{ inputs.infinispan_use_custom_image }}

      - name: Create Accelerator Loadbalancer
        if: ${{ inputs.activeActive }}
        working-directory: provision/rosa-cross-dc
        run: |
          task global-accelerator-create
        env:
          ACCELERATOR_NAME: ${{ env.CLUSTER_PREFIX }}
          ROSA_CLUSTER_NAME_1: ${{ env.CLUSTER_PREFIX }}-a
          ROSA_CLUSTER_NAME_2: ${{ env.CLUSTER_PREFIX }}-b

      - name: Deploy Active/Active
        if: ${{ inputs.activeActive }}
        working-directory: provision/rosa-cross-dc
        run: task active-active
        env:
          ACCELERATOR_DNS: ${{ env.ACCELERATOR_DNS }}
          ACCELERATOR_NAME: ${{ env.CLUSTER_PREFIX }}
          ACCELERATOR_WEBHOOK_URL: ${{ env.ACCELERATOR_WEBHOOK }}
          ACCELERATOR_WEBHOOK_USERNAME: "keycloak"
          ACCELERATOR_WEBHOOK_PASSWORD: ${{ env.KEYCLOAK_ADMIN_PASSWORD }}
          AURORA_CLUSTER: ${{ env.CLUSTER_PREFIX }}
          AURORA_REGION: ${{ env.REGION }}
          ROSA_CLUSTER_NAME_1: ${{ env.CLUSTER_PREFIX }}-a
          ROSA_CLUSTER_NAME_2: ${{ env.CLUSTER_PREFIX }}-b
          KC_OPERATOR_OLM: ${{ inputs.keycloak_operator_olm }}
          KC_OPERATOR_CATALOG_SOURCE: ${{ inputs.keycloak_operator_olm_catalog_source }}
          KC_OPERATOR_NAME: ${{ inputs.keycloak_operator_olm_name }}
          KC_OPERATOR_CHANNEL: ${{ inputs.keycloak_operator_olm_channel }}
          KC_OPERATOR_VERSION: ${{ inputs.keycloak_operator_olm_version }}
          KC_CPU_REQUESTS: 6
          KC_CPU_LIMITS: 6
          KC_INSTANCES: 3
          KC_DISABLE_STICKY_SESSION: true
          KC_CRYOSTAT: true
          KC_IS_ACTIVE_PASSIVE: false
          KC_EXTERNAL_INFINISPAN: ${{ env.KC_EXTERNAL_INFINISPAN }}
          KC_MEMORY_REQUESTS_MB: 3000
          KC_MEMORY_LIMITS_MB: 4000
          KC_DB_POOL_INITIAL_SIZE: 30
          KC_DB_POOL_MAX_SIZE: 30
          KC_DB_POOL_MIN_SIZE: 30
          KC_DATABASE: "aurora-postgres"
          MULTI_AZ: "true"
          KC_REPOSITORY: ${{ inputs.keycloakRepository }}
          KC_BRANCH: ${{ inputs.keycloakBranch }}
          CROSS_DC_IMAGE_USE_CUSTOM: ${{ inputs.infinispan_use_custom_image }}
