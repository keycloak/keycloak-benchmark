name: ROSA Cluster - Run Benchmark

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Name of the cluster'
        type: string
      skipCreateDeployment:
        description: 'Skip creating Keycloak deployment'
        type: boolean
        default: false
      skipCreateDataset:
        description: 'Skip creating dataset'
        type: boolean
        default: false
      skipDeleteProject:
        description: 'Skip deleting project'
        type: boolean
        default: false

concurrency: cluster_${{ inputs.clusterName || format('gh-{0}', github.repository_owner) }}

env:
  PROJECT_PREFIX: runner- # same as default
  PROJECT: runner-keycloak

jobs:
  run:
    name: Run Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ROSA CLI
        uses: ./.github/actions/rosa-cli-setup
        with:
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ vars.AWS_DEFAULT_REGION }}
          rosa-token: ${{ secrets.ROSA_TOKEN }}

      - name: Login to OpenShift cluster
        uses: ./.github/actions/oc-keycloak-login
        with:
          clusterName: ${{ inputs.clusterName || format('gh-{0}', github.repository_owner) }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven Wrapper
        uses: actions/cache@v3
        with:
          path: |
            .mvn/wrapper/maven-wrapper.jar
          key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-wrapper-

      - name: Build with Maven
        run: |
          ./mvnw -B clean package -DskipTests -pl benchmark
          tar xfvz benchmark/target/keycloak-benchmark-*.tar.gz
          mv keycloak-benchmark-* keycloak-benchmark

      - name: Create Keycloak deployment
        if: ${{ !inputs.skipCreateDeployment }}
        uses: ./.github/actions/keycloak-create-deployment
        with:
          projectPrefix: ${{ env.PROJECT_PREFIX }}


      - name: Create Keycloak dataset
        if: ${{ !inputs.skipCreateDataset }}
        uses: ./.github/actions/keycloak-create-dataset
        with:
          project: ${{ env.PROJECT }}

      - name: Get URLs
        uses: ./.github/actions/get-keycloak-url
        with:
          project: ${{ env.PROJECT }}

      - name: Run Authorization Code scenario
        id: kcb
        run: bin/kcb.sh --scenario=keycloak.scenario.authentication.AuthorizationCode --server-url=${{ env.KEYCLOAK_URL }} --realm-name=realm-0
        working-directory: keycloak-benchmark

      - name: Archive Gatling reports
        uses: actions/upload-artifact@v3
        with:
          name: gatling-results
          path: keycloak-benchmark/results
          retention-days: 5

      - name: Archive Summary
        uses: actions/upload-artifact@v3
        with:
          name: summary
          path: ${{ steps.kcb.outputs.kcb_result }}
          retention-days: 5

      - name: Delete Keycloak deployment
        if: ${{ !inputs.skipDeleteProject }}
        uses: ./.github/actions/keycloak-delete-deployment
        with:
          project: ${{ env.PROJECT }}

  archive:
    name: Commit results to Git repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - run
    steps:

      - name: Checkout repository for results
        uses: actions/checkout@v4
        with:
          ref: 'result-data'

      - uses: actions/download-artifact@v3
        with:
          name: summary

      - name: Commit result-summary
        shell: bash
        env:
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          DATE_FOLDER=benchmark/$(date +"%Y/%m/%d")
          mkdir -p ${DATE_FOLDER}
          mv *.json ${DATE_FOLDER}
          git add .
          git commit -m "generated"
          git push

