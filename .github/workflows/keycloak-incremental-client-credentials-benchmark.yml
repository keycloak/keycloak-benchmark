name: Keycloak - Incremental client credentials benchmark

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Name of the cluster'
        type: string
      numberOfClientsInRealm:
        description: 'Number of clients'
        type: number
        default: 10000
      numberOfClientsUsedInTest:
        description: 'Number of clients used in test'
        type: number
      initialUsersPerSecond:
        description: 'Initial users per second'
        type: number
        default: 1
      skipCreateDeployment:
        description: 'Skip creating Keycloak deployment'
        type: boolean
        default: false
      skipCreateDataset:
        description: 'Skip creating dataset'
        type: boolean
        default: false
      skipDeleteProject:
        description: 'Skip deleting project'
        type: boolean
        default: false

concurrency: cluster_${{ inputs.clusterName || format('gh-{0}', github.repository_owner) }}

env:
  PROJECT_PREFIX: runner- # same as default
  PROJECT: runner-keycloak

jobs:
  run:
    name: Run Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup ROSA CLI
        uses: ./.github/actions/rosa-cli-setup
        with:
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ vars.AWS_DEFAULT_REGION }}
          rosa-token: ${{ secrets.ROSA_TOKEN }}

      - name: Login to OpenShift cluster
        uses: ./.github/actions/oc-keycloak-login
        with:
          clusterName: ${{ inputs.clusterName || format('gh-{0}', github.repository_owner) }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Cache Maven Wrapper
        uses: actions/cache@v3
        with:
          path: |
            .mvn/wrapper/maven-wrapper.jar
          key: ${{ runner.os }}-maven-wrapper-${{ hashFiles('**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-wrapper-

      - name: Build with Maven
        run: |
          ./mvnw -B clean install -DskipTests
          tar xfvz benchmark/target/keycloak-benchmark-*.tar.gz
          mv keycloak-benchmark-* keycloak-benchmark

      - name: Create Keycloak deployment
        if: ${{ !inputs.skipCreateDeployment }}
        uses: ./.github/actions/keycloak-create-deployment
        with:
          projectPrefix: ${{ env.PROJECT_PREFIX }}


      - name: Create Keycloak dataset
        if: ${{ !inputs.skipCreateDataset }}
        uses: ./.github/actions/keycloak-create-dataset
        with:
          project: ${{ env.PROJECT }}
          clients: ${{ inputs.numberOfClientsInRealm }}

      - name: Get URLs
        uses: ./.github/actions/get-keycloak-url
        with:
          project: ${{ env.PROJECT }}

      - name: Run Client Credentials scenario
        run: |
          bin/kcb.sh --scenario=keycloak.scenario.authentication.ClientSecret \
            --server-url=${{ env.KEYCLOAK_URL }} \
            --users-per-sec=${{ inputs.initialUsersPerSecond }}  \
            --increment=32 \
            --measurement=60 \
            --ramp-up=60 \
            --realm-name=realm-0 \
            --clients-per-realm=${{ inputs.numberOfClientsUsedInTest || inputs.numberOfClientsInRealm }}
        working-directory: keycloak-benchmark

      - name: Archive Gatling reports
        uses: actions/upload-artifact@v3
        with:
          name: gatling-results
          path: keycloak-benchmark/results
          retention-days: 5

      - name: Delete Keycloak deployment
        if: ${{ !inputs.skipDeleteProject }}
        uses: ./.github/actions/keycloak-delete-deployment
        with:
          project: ${{ env.PROJECT }}
