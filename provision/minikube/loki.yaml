#  https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
loki:
  commonConfig:
    replication_factor: 1
  storage:
    type: 'filesystem'
  schemaConfig:
    configs:
      - from: 2025-03-01
        store: tsdb
        index:
          prefix: loki_index_
          period: 24h
        object_store: filesystem # we're storing on filesystem so there's no real persistence here.
        schema: v13
  auth_enabled: false
  image:
    registry: mirror.gcr.io
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
  ruler:
    enable_api: true

deploymentMode: SingleBinary

singleBinary:
  replicas: 1

chunksCache:
  enabled: false

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

monitoring:
  rules:
    # when enabling rules, the prometheus operator needs to be available in the cluster, otherwise there's the error
    # Error: Internal error occurred: failed calling webhook "prometheusrulemutate.monitoring.coreos.com":
    # failed to call webhook: Post "https://prometheus-kube-prometheus-operator.monitoring.svc:443/admission-prometheusrules/mutate?timeout=10s":
    # dial tcp xxx.xxx.xxx:443: connect: connection refused
    enabled: false
  selfMonitoring:
    enabled: false
    lokiCanary:
      enabled: false

test:
  enabled: false

tableManager:
  retention_deletes_enabled: true
  retention_period: 60d

grafana-agent-operator:
  https://github:
    com/grafana/helm-charts/blob/main/charts/agent-operator/values:
      yaml:
  image:
    registry: mirror.gcr.io
