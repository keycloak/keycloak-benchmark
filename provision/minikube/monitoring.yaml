# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

namespaceOverride: monitoring

grafana:
  namespaceOverride: monitoring
  adminPassword: keycloak
  sidecar:
    datasources:
      enabled: false
      defaultDatasourceEnabled: false
  # values in dependent chart / https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
  grafana.ini:
    snapshots:
      external_enabled: false
    server:
      # use --set grafana."grafana\.ini".server.root_url=... for this
      root_url: "specify-on-cli"
    feature_toggles:
      enable: tempoSearch tempoBackendSearch
    auth.anonymous:
      enabled: true
      org_role: Admin
      org_name: Main Org.
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        uid: PBFA97CFB590B2093
        type: prometheus
        url: http://prometheus-kube-prometheus-prometheus.monitoring:9090/
        access: proxy
        isDefault: true
        editable: false
        jsonData:
          timeInterval: 30s
          exemplarTraceIdDestinations:
            - datasourceUid: PC9A941E8F2E49454
              name: trace_id
      #- name: Tempo
      #  uid: P214B5B846CF3925F
      #  type: tempo
      #  url: http://tempo.monitoring.svc:3100/
      #  access: proxy
      #  isDefault: false
      #  editable: false
      - name: Jaeger
        uid: PC9A941E8F2E49454
        type: jaeger
        url: "http://jaeger-query.monitoring.svc:16686"
        access: proxy
        isDefault: false
        editable: false
        jsonData:
          tracesToLogs:
            datasourceUid: P8E80F9AEF21F6940
            filterByTraceID: true,
            mapTagNamesEnabled: true
            mappedTags:
              - key: "hostname"
                value: "pod"
            spanStartTimeShift: "-1h"
            spanEndTimeShift: "1h"
      - name: Loki
        uid: P8E80F9AEF21F6940
        type: loki
        url: "http://loki.monitoring.svc:3100"
        access: proxy
        isDefault: false
        editable: false
        jsonData:
          maxLines: 1000
          derivedFields:
            - datasourceUid: PC9A941E8F2E49454
              matcherRegex: '"trace_id":"(\w*)"'
              name: traceID
              # url will be interpreted as query for the datasource
              url: '$${__value.raw}'

kube-state-metrics:
  namespaceOverride: monitoring

prometheus-node-exporter:
  namespaceOverride: monitoring

kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeEtcd:
  enabled: false
kubelet:
  cAdvisor:
    # remove embedded cAdvisor metrics as they are unreliable and have gaps
    # (at least on minikube on Linux with podman/cri-o
    enabled: false

prometheus:
  prometheusSpec:
    enableFeatures:
      - exemplar-storage
    podMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 60d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi

