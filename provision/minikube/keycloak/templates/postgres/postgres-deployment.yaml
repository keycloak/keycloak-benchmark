{{ if or (eq .Values.database "postgres") (eq .Values.database "postgres+infinispan") }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: keycloak
  labels:
    app: postgres
spec:
  clusterIP: None
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres-headless
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - imagePullPolicy: Always
          env:
            - name: POSTGRES_PASSWORD
              value: secret99
            - name: POSTGRES_USER
              value: keycloak
            - name: POSTGRES_DB
              value: keycloak
          image: mirror.gcr.io/postgres:15
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          resources:
            requests:
              cpu: "{{ .Values.cpuRequests }}"
          startupProbe:
            tcpSocket:
              port: 5432
            failureThreshold: 20
            initialDelaySeconds: 10
            periodSeconds: 2
          readinessProbe:
            tcpSocket:
              port: 5432
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5432
            failureThreshold: 10
            periodSeconds: 10
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always
      # The rhel9/postgresql-13 is known to take ~30 seconds to shut down
      # As this is a deployment with ephemeral storage, there is no need to wait as the data will be gone anyway
      terminationGracePeriodSeconds: 0
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Retain
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
{{ end }}
