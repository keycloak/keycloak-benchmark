{{ if eq .Values.database "cockroach" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cockroach
  name: cockroach
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cockroach
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cockroach
      annotations:
        checksum: {{ include (print $.Template.BasePath "/cockroach/cockroach-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - image: cockroachdb/cockroach:latest-v22.1
          args:
            - start-single-node
            - --insecure
            - --accept-sql-without-tls
            # --listen-addr=0.0.0.0
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          imagePullPolicy: Always
          startupProbe:
            tcpSocket:
              port: 26257
            failureThreshold: 20
            initialDelaySeconds: 10
            periodSeconds: 2
          readinessProbe:
            tcpSocket:
              port: 26257
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 26257
            failureThreshold: 10
            periodSeconds: 10
          name: cockroach
          ports:
            - containerPort: 26257
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: initdb
      restartPolicy: Always
      volumes:
        - name: initdb
          configMap:
            name: cockroach
{{ end }}