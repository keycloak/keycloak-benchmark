---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  # for now, use max 5 on podman driver to avoid too many active threads
  # Tested with 15 replicas on driver kvm2 with "default-ulimit=nofile=102400:102400"
  # sum(container_threads{job="cadvisor/cadvisor",image=~".+"})
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  strategy:
#    rollingUpdate:
#      maxSurge: 25%
#      maxUnavailable: 25%
#    type: RollingUpdate
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
{{ if .Values.otel }}
        - command:
            - /bin/bash
          args:
            - -c
            - curl -L https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.13.1/opentelemetry-javaagent.jar -o /tmp/opentelemetry-javaagent.jar && /opt/keycloak/bin/kc.sh start --auto-build
{{ else }}
        - args:
            - start
            - --auto-build
{{ end }}
          env:
            - name: KC_PROXY
              value: reencrypt
            - name: KC_CACHE
              value: ispn
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_CACHE_STACK
              value: kubernetes
{{ if .Values.otel }}
            - name: JAVA_OPTS_APPEND
              # using non-blocking random, make DNS lookups expire after 10 seconds and not cache them forever
              value: -Djava.security.egd=file:/dev/urandom -Dnetworkaddress.cache.ttl=10 -javaagent:/tmp/opentelemetry-javaagent.jar -XX:+ExitOnOutOfMemoryError
            # https://github.com/open-telemetry/opentelemetry-java-instrumentation
            # https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=keycloak
            - name: OTEL_TRACES_EXPORTER
              # with otel+tempo 1.4.1 forwarding of traces works, but searching is not returning all values for now, for example delete users was missing
              value: jaeger
            - name: OTEL_EXPORTER_JAEGER_ENDPOINT
              value: http://jaeger-collector.monitoring.svc:14250
            - name: OTEL_TRACES_SAMPLER
              value: always_on
            - name: OTEL_METRICS_EXPORTER
              value: prometheus
{{ else }}
            - name: JAVA_OPTS_APPEND
              # using non-blocking random, make DNS lookups expire after 10 seconds and not cache them forever
              value: -Djava.security.egd=file:/dev/urandom -Dnetworkaddress.cache.ttl=10 -XX:+ExitOnOutOfMemoryError
{{ end }}
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres:5432/keycloak
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_DB_USERNAME
              value: keycloak
            - name: KC_DB_PASSWORD
              value: pass
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
            - name: jgroups.dns.query
              value: keycloak-discovery
            - name: KC_HOSTNAME
              value: keycloak.{{ .Values.hostname }}
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: /mnt/certificates/tls.crt
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: /mnt/certificates/tls.key
            - name: KC_LOG_CONSOLE_OUTPUT
              value: json
          image: quay.io/keycloak/keycloak:nightly
          imagePullPolicy: Always
          startupProbe:
            httpGet:
              path: /health/ready
              port: 8443
              scheme: HTTPS
            failureThreshold: 250
            initialDelaySeconds: 10
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8443
              scheme: HTTPS
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8443
              scheme: HTTPS
            failureThreshold: 10
            periodSeconds: 10
          name: keycloak
          ports:
            - containerPort: 8443
              protocol: TCP
              name: http
            - containerPort: 8080
              protocol: TCP
              name: discovery
{{ if .Values.otel }}
            - containerPort: 9464
              protocol: TCP
              name: otel-prometheus
{{ end }}
          resources: {}
#            limits:
#              cpu: "2000m"
#              memory: "1500Mi"
          volumeMounts:
            - mountPath: /mnt/certificates
              name: keycloak-tls-certificates
      restartPolicy: Always
      volumes:
        - name: keycloak-tls-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: keycloak-tls-secret
