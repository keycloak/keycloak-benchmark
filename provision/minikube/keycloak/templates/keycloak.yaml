apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: {{ .Values.namespace }}
spec:
  hostname: keycloak.{{ .Values.hostname }}
  serverConfiguration:
    - name: db
      value: postgres
    - name: db-url
      value: jdbc:postgresql://postgres:5432/keycloak
    - name: db-pool-min-size
      value: {{ quote .Values.dbPoolInitialSize }}
    - name: db-pool-max-size
      value: {{ quote .Values.dbPoolMaxSize }}
    - name: db-pool-initial-size
      value: {{ quote .Values.dbPoolMinSize }}
{{ if ne .Values.storage "" }}
    - name: storage
      value: {{ quote .Values.storage }}
{{ end }}
    - name: log-console-output
      value: json
    - name: metrics-enabled
      value: 'true'
    - name: health-enabled
      value: 'true'
    - name: db-username
      secret:
        name: keycloak-db-secret
        key: username
    - name: db-password
      secret:
        name: keycloak-db-secret
        key: password
  tlsSecret: keycloak-tls-secret
  instances: 1
  unsupported:
    podTemplate:
      spec:
        containers:
          -
{{ if .Values.otel }}
            command:
              - /bin/bash
            args:
              - -c
              - curl -L https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.15.0/opentelemetry-javaagent.jar -o /tmp/opentelemetry-javaagent.jar && /opt/keycloak/bin/kc.sh start --auto-build
{{ end }}
            env:
{{ if .Values.otel }}
              # https://github.com/open-telemetry/opentelemetry-java-instrumentation
              # https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md
              - name: OTEL_RESOURCE_ATTRIBUTES
                value: service.name=keycloak
              - name: OTEL_TRACES_EXPORTER
                # with otel+tempo 1.4.1 forwarding of traces works, but searching is not returning all values for now, for example delete users was missing
                value: jaeger
              - name: OTEL_EXPORTER_JAEGER_ENDPOINT
                value: http://jaeger-collector.monitoring.svc:14250
              - name: OTEL_TRACES_SAMPLER
                value: parentbased_traceidratio # always_on, parentbased_traceidratio, ...
              - name: OTEL_TRACES_SAMPLER_ARG
                value: "0.001" # 1.0 to sample everything (warning, lots of memory used in Jaeger backend!)
              - name: OTEL_METRICS_EXPORTER
                value: prometheus
{{ end }}
              # putting this as an environment variable as updating annotations is not supported by the Keycloak Operator
              # see: https://github.com/keycloak/keycloak/blob/6812bad2ae34a6467e7cbccfecb4a11c0626db39/operator/app/src/main/java/org/keycloak/operator/controllers/KeycloakDeployment.java#L97-L103
              # will be resolved in https://github.com/keycloak/keycloak/issues/12699
              - name: CHECKSUM
                value: {{ include (print $.Template.BasePath "/keycloak-providers-configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/postgres-deployment.yaml") . | sha256sum }}
              - name: JAVA_OPTS_APPEND
                # using non-blocking random, make DNS lookups expire after 10 seconds and not cache them forever
                value: >
                  -Djava.security.egd=file:/dev/urandom -Dnetworkaddress.cache.ttl=10 -XX:+ExitOnOutOfMemoryError
{{ if .Values.otel }}
                  -javaagent:/tmp/opentelemetry-javaagent.jar
{{ end }}
{{ if .Values.cryostat }}
                  -Dcom.sun.management.jmxremote.port=9091 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
                  -XX:FlightRecorderOptions=stackdepth=512
{{ end }}
{{ if or .Values.otel .Values.cryostat }}
            ports:
{{ end }}
{{ if .Values.otel }}
              - containerPort: 9464
                protocol: TCP
                name: otel-prometheus
{{ end }}
{{ if .Values.cryostat }}
              - containerPort: 9091
                protocol: TCP
                name: jfr-jmx
{{ end }}
            resources: {}
              # limits:
              #  cpu: "2000m"
              #  memory: "1500Mi"
            startupProbe:
              httpGet:
                path: /health/ready
                port: 8443
                scheme: HTTPS
              failureThreshold: 250
              initialDelaySeconds: 10
              periodSeconds: 2
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8443
                scheme: HTTPS
              failureThreshold: 10
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8443
                scheme: HTTPS
              failureThreshold: 10
              periodSeconds: 10
            volumeMounts:
              - name: keycloak-providers
                mountPath: /opt/keycloak/providers
                readOnly: true
        volumes:
          - name: keycloak-providers
            configMap:
              name: keycloak-providers

